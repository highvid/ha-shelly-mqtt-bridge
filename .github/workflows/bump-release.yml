name: Tagged Release

on:
  pull_request:
    types: [closed]

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        if: ${{ github.event.pull_request.merged == true }}

      - name: Extract Tag from Commit Message
        id: extract_tag
        run: |
          LAST_COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
          
          if [[ $LAST_COMMIT_MESSAGE =~ tag:([^[:space:]]+)[[:space:]]+(.*) ]]; then
            echo "Custom tag found: ${BASH_REMATCH[1]}"
            echo "Custom message: ${BASH_REMATCH[2]}"
            echo "custom_tag=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "custom_message=${BASH_REMATCH[2]}" >> $GITHUB_ENV
            echo "should_continue=true" >> $GITHUB_ENV
          else
            echo "Unable to extract tag and message"
            echo "should_continue=false" >> $GITHUB_ENV
          fi
        if: ${{ github.event.pull_request.merged == true }}
      - name: Create and Push Tag
        if: ${{ env.should_continue == 'true' && github.event.pull_request.merged == true }}
        run: |
          git tag ${{ env.custom_tag }}
          git push origin ${{ env.custom_tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_ACCESS_KEY }}
      - name: Create GitHub Release
        uses: actions/create-release@v1
        if: ${{ env.should_continue == 'true' && github.event.pull_request.merged == true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_ACCESS_KEY }}
        with:
          tag_name: ${{ env.custom_tag }}
          release_name: ${{ env.custom_message }}
          draft: false
          prerelease: false

name: Docker Buildx for GHCR on Release

on:
  workflow_run:
    workflows:
      - Run Tests
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion  == 'success' &&
          github.event.workflow_run.head_branch == 'main' &&
          github.event.workflow_run.event       == 'push' }}
    permissions:
      contents: write
      packates: write
      action: read

    steps:
      # Step 1: Checkout repository
      - name: Checkout Code
        uses: actions/checkout@v3
        if: > 
          ${{ github.event.workflow_run.conclusion  == 'success' &&
              github.event.workflow_run.head_branch == 'main' &&
              github.event.workflow_run.event       == 'push' }}

      - name: Extract Tag from Commit Message
        id: extract_tag
        run: |
          LAST_COMMIT_MESSAGE="$(git log -1 --pretty=%B)"
          
          if [[ $LAST_COMMIT_MESSAGE =~ tag:([^[:space:]]+)[[:space:]]+(.*) ]]; then
            echo "Custom tag found: ${BASH_REMATCH[1]}"
            echo "Custom message: ${BASH_REMATCH[2]}"
            echo "custom_tag=${BASH_REMATCH[1]}" >> $GITHUB_ENV
            echo "custom_message=${BASH_REMATCH[2]}" >> $GITHUB_ENV
            echo "should_continue=true" >> $GITHUB_ENV
          else
            echo "Unable to extract tag and message"
            echo "Message=${LAST_COMMIT_MESSAGE}"
            echo "should_continue=false" >> $GITHUB_ENV
          fi
        if: > 
          ${{ github.event.workflow_run.conclusion  == 'success' &&
              github.event.workflow_run.head_branch == 'main' &&
              github.event.workflow_run.event       == 'push' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        if: > 
          ${{ env.should_continue == 'true' && github.event.workflow_run.conclusion  == 'success' &&
              github.event.workflow_run.head_branch == 'main' &&
              github.event.workflow_run.event       == 'push' }}

      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_ACCESS_KEY }}
        if: > 
          ${{ env.should_continue == 'true' && github.event.workflow_run.conclusion  == 'success' &&
              github.event.workflow_run.head_branch == 'main' &&
              github.event.workflow_run.event       == 'push' }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/ha-shelly-bridge:${{ env.custom_tag }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/ha-shelly-bridge:cache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/ha-shelly-bridge:cache,mode=max
        if: > 
          ${{ env.should_continue == 'true' && github.event.workflow_run.conclusion  == 'success' &&
              github.event.workflow_run.head_branch == 'main' &&
              github.event.workflow_run.event       == 'push' }}

name: Notify Slack of PR Creation

on:
  pull_request:
    types: [opened, reopened]

jobs:
  slack-notification:
    runs-on: ubuntu-latest
    if: 
    steps:
      # - name: Get GitHub actor full name
      #   id: get_actor_name
      #   run: |
      #     ACTOR="${{ github.actor }}"
      #     USER_DATA=$(curl -s https://api.github.com/users/$ACTOR)
      #     FULL_NAME=$(echo "$USER_DATA" | jq -r '.name')
      #     echo "actor_full_name=${FULL_NAME}" >> $GITHUB_OUTPUT
      - name: Get gitHub actor email
        id: get_actor_email
        env:
          ACTOR: ${{ gtihub.actor }}
        run: |
          USER_DATA=$(curl -s https://api.github.com/users/$ACTOR)
          EMAIL=$(echo "$USER_DATA" | jq -r '.email')
          echo "email=${EMAIL}" >> $GITHUB_OUTPUT
      - name: Find Slack ID via Slack API
        if: endsWith(steps.email_step.outputs.email, '@gmail.com') || endsWith(steps.email_step.outputs.email, '@manvil.me')
        id: find_slack_user
        uses: slackapi/slack-github-action@v2.0.0
        with:
          errors: true
          method: users.lookupByEmail
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            email: ${{ steps.get_actor_email.outputs.email }}
      - name: Get Slack Info
        if: ${{ steps.find_slack_user.outputs.ok }}
        run: |
          if [ "${{ steps.find_slack_user.outcome }}" = "success" && "${{ steps.slack_lookup.outputs.ok }}" == "true" ]; then
            SLACK_USER_ID=$(echo '${{ steps.find_slack_user.outputs.response }}' | jq -r '.user.id')
            echo "slack_user_id=$SLACK_USER_ID >> $GITHUB_OUTPUT
          else
            echo "slack_user_id=${{ github.actor }}" >> $GITHUB_OUTPUT
          end

      - name: Send Slack Notification
        id: slack-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "Please review PR <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}> by <@${{ steps.find_slack_user.outputs.slack_user_id }}>"

      - name: Debug Message TS
        run: |
          echo "Message TS: ${{ steps.slack-message.outputs.ts }}"
      - name: Save Thread TS
        run: |
          echo "${{ steps.slack-message.outputs.ts  }}" > slack_thread_ts_${{github.event.pull_request.number}}.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "slack-thread-ts-${{ github.event.pull_request.number }}"
          path: "slack_thread_ts_${{github.event.pull_request.number}}.txt"

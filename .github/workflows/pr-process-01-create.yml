name: Notify Slack of PR Creation

on:
  pull_request:
    types: [opened, reopened]

jobs:
  slack-notification:
    runs-on: ubuntu-latest
    if: 
    steps:
      - name: Get GitHub actor full name
        id: get_actor_name
        run: |
          ACTOR="${{ github.actor }}"
          USER_DATA=$(curl -s https://api.github.com/users/$ACTOR)
          FULL_NAME=$(echo "$USER_DATA" | jq -r '.name')
          echo "actor_full_name=${FULL_NAME}" >> $GITHUB_OUTPUT
      - name: Find Slack ID via Slack API
        id: find_slack_user
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          ACTOR_NAME: ${{ steps.get_actor_name.outputs.actor_full_name }}
        run: |
          USERS_LIST=$(curl -s -H "Authorization: Bearer $SLACK_BOT_TOKEN" https://slack.com/api/users.list)
          MATCHED_ID=$(echo $USERS_LIST | jq -r --arg NAME "$ACTOR_NAME" '.members[] | select(.real_name==$NAME) | .id')
          if [ -z "$MATCHED_ID" ]; then
            MATCHED_ID="${{ github.actor }}"
          fi
          echo "slack_user_id=$MATCHED_ID" >> $GITHUB_OUTPUT
      - name: Send Slack Notification
        id: slack-message
        uses: slackapi/slack-github-action@v2.0.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            text: "Please review PR <${{ github.event.pull_request.html_url }}|#${{ github.event.pull_request.number }}: ${{ github.event.pull_request.title }}> by <@${{ steps.find_slack_user.outputs.slack_user_id }}>"

      - name: Debug Message TS
        run: |
          echo "Message TS: ${{ steps.slack-message.outputs.ts  }}"
      - name: Save Thread TS
        run: |
          echo "${{ steps.slack-message.outputs.ts  }}" > slack_thread_ts_${{github.event.pull_request.number}}.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: "slack-thread-ts-${{ github.event.pull_request.number }}"
          path: "slack_thread_ts_${{github.event.pull_request.number}}.txt"
      - name: Status Checks
        id: status-checks
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_ACCESS_KEY }}
          SHA: ${{ github.event.pull_request.head.sha }}
          OWNER: ${{ github.repository_owner }}
          REPO: ${{ github.event.repository.name }}
        run: |
          echo "Checking status checks for commit: $SHA"
          
          # Call GitHub API for commit status
          STATUS_JSON=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            https://api.github.com/repos/$OWNER/$REPO/commits/$SHA/status)
          
          echo "$STATUS_JSON" | jq '.'

          STATE=$(echo "$STATUS_JSON" | jq -r '.state')

          echo "Current combined status: $STATE"
          
          if [ "$STATE" == "failure" ]; then
            echo "success_state=false" >> $GITHUB_OUTPUT
          else
            echo "success_state=true" >> $GITHUB_OUTPUT
          fi
      - name: Add failure of status
        uses: slackapi/slack-github-action@v2.0.0
        if: ${{ steps.status-checks.outputs.success_state == 'false' }}
        with:
          errors: true
          method: reactions.add
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            timestamp: ${{ steps.slack-message.outputs.ts }}
            name: ":rotating-light-red:"

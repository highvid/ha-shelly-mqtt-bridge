name: Notify Slack of Review Comments

on:
  pull_request_review:
    types: [submitted]

jobs:
  slack-notification-comment:
    runs-on: ubuntu-latest
    if: github.event.review.state == 'COMMENTED'
    steps:
      - name: Get GitHub actor full name
        id: get_actor_name
        run: |
          ACTOR="${{ github.actor }}"
          USER_DATA=$(curl -s https://api.github.com/users/$ACTOR)
          FULL_NAME=$(echo "$USER_DATA" | jq -r '.name')
          echo "actor_full_name=${FULL_NAME}" >> $GITHUB_OUTPUT
      - name: Find Slack ID via Slack API
        id: find_slack_user
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          ACTOR_NAME: ${{ steps.get_actor_name.outputs.actor_full_name }}
        run: |
          USERS_LIST=$(curl -s -H "Authorization: Bearer $SLACK_BOT_TOKEN" https://slack.com/api/users.list)
          MATCHED_ID=$(echo $USERS_LIST | jq -r --arg NAME "$ACTOR_NAME" '.members[] | select(.real_name==$NAME) | .id')
          if [ -z "$MATCHED_ID" ]; then
            MATCHED_ID="NOT_FOUND"
          fi
          echo "slack_user_id=$MATCHED_ID" >> $GITHUB_OUTPUT
      - name: Check for Artifact
        id: check-artifact
        run: |
          ARTIFACT_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                                -H "Accept: application/vnd.github+json" "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
                        jq -r '.artifacts | map(select(.name == "slack-thread-ts-${{ github.event.pull_request.number }}")) | sort_by(.created_at)  | .[-1].id')
          if [[ -n "$ARTIFACT_ID" ]]; then
            echo "artifact_exists=true" >> $GITHUB_OUTPUT
            echo "artifact_id=$ARTIFACT_ID" >> $GITHUB_OUTPUT
          else
            echo "artifact_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GHCR_ACCESS_KEY }}
      - name: Download Artifact
        id: download-artifact
        run: |
          curl -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${{ env.ARTIFACT_ID }}/zip" \
            -o artifact.zip
          unzip artifact.zip -d artifact_contents
          THREAD_TS=$(cat artifact_contents/slack_thread_ts_${{github.event.pull_request.number}}.txt)
          echo "thread_ts=$THREAD_TS" >> $GITHUB_OUTPUT
        if: ${{ steps.check-artifact.outputs.artifact_exists == 'true' }}
      - name: Add PR Commented Emoji
        id: pr-comment
        uses: slackapi/slack-github-action@v2.0.0
        if: ${{ steps.check-artifact.outputs.artifact_exists == 'true' }}
        continue-on-error: true
        with:
          errors: true
          method: reactions.add
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            timestamp: ${{ steps.download-artfiact.outputs.thread_ts }}
            name: "comment_added"
      - name: Add who commented the PR
        uses: slackapi/slack-github-action@v2.0.0
        if: ${{ steps.pr-comment.outcome != 'failure' && steps.check-artifact.outputs.artifact_exists == 'true' }}
        with:
          errors: true
          method: chat.postMessage
          token: ${{ secrets.SLACK_BOT_TOKEN }}
          payload: |
            channel: ${{ secrets.SLACK_CHANNEL_ID }}
            thread_ts: "${{ steps.download-artfiact.outputs.thread_ts }}"
            text: "Comments by <@${{ steps.find_slack_user.outputs.slack_user_id }}>"
